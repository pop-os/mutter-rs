// Generated by gir (https://github.com/gtk-rs/gir @ 45cd7bc)
// from gir-files (https://github.com/gtk-rs/gir-files.git @ 8e47c67)
// from mutter-gir-files
// DO NOT EDIT

#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
use bitflags::bitflags;
#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
use glib::translate::*;
#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
use std::fmt;

#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
bitflags! {
    #[doc(alias = "CoglPixelFormat")]
    pub struct PixelFormat: u32 {
        #[doc(alias = "COGL_PIXEL_FORMAT_ANY")]
        const ANY = ffi::COGL_PIXEL_FORMAT_ANY as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_A_8")]
        const A_8 = ffi::COGL_PIXEL_FORMAT_A_8 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGB_565")]
        const RGB_565 = ffi::COGL_PIXEL_FORMAT_RGB_565 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_4444")]
        const RGBA_4444 = ffi::COGL_PIXEL_FORMAT_RGBA_4444 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_5551")]
        const RGBA_5551 = ffi::COGL_PIXEL_FORMAT_RGBA_5551 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_YUV")]
        const YUV = ffi::COGL_PIXEL_FORMAT_YUV as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_G_8")]
        const G_8 = ffi::COGL_PIXEL_FORMAT_G_8 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RG_88")]
        const RG_88 = ffi::COGL_PIXEL_FORMAT_RG_88 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGB_888")]
        const RGB_888 = ffi::COGL_PIXEL_FORMAT_RGB_888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGR_888")]
        const BGR_888 = ffi::COGL_PIXEL_FORMAT_BGR_888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_8888")]
        const RGBA_8888 = ffi::COGL_PIXEL_FORMAT_RGBA_8888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_8888")]
        const BGRA_8888 = ffi::COGL_PIXEL_FORMAT_BGRA_8888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_8888")]
        const ARGB_8888 = ffi::COGL_PIXEL_FORMAT_ARGB_8888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_8888")]
        const ABGR_8888 = ffi::COGL_PIXEL_FORMAT_ABGR_8888 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_1010102")]
        const RGBA_1010102 = ffi::COGL_PIXEL_FORMAT_RGBA_1010102 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_1010102")]
        const BGRA_1010102 = ffi::COGL_PIXEL_FORMAT_BGRA_1010102 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_2101010")]
        const ARGB_2101010 = ffi::COGL_PIXEL_FORMAT_ARGB_2101010 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_2101010")]
        const ABGR_2101010 = ffi::COGL_PIXEL_FORMAT_ABGR_2101010 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_FP_16161616")]
        const RGBA_FP_16161616 = ffi::COGL_PIXEL_FORMAT_RGBA_FP_16161616 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_FP_16161616")]
        const BGRA_FP_16161616 = ffi::COGL_PIXEL_FORMAT_BGRA_FP_16161616 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_FP_16161616")]
        const ARGB_FP_16161616 = ffi::COGL_PIXEL_FORMAT_ARGB_FP_16161616 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_FP_16161616")]
        const ABGR_FP_16161616 = ffi::COGL_PIXEL_FORMAT_ABGR_FP_16161616 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_8888_PRE")]
        const RGBA_8888_PRE = ffi::COGL_PIXEL_FORMAT_RGBA_8888_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_8888_PRE")]
        const BGRA_8888_PRE = ffi::COGL_PIXEL_FORMAT_BGRA_8888_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_8888_PRE")]
        const ARGB_8888_PRE = ffi::COGL_PIXEL_FORMAT_ARGB_8888_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_8888_PRE")]
        const ABGR_8888_PRE = ffi::COGL_PIXEL_FORMAT_ABGR_8888_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_4444_PRE")]
        const RGBA_4444_PRE = ffi::COGL_PIXEL_FORMAT_RGBA_4444_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_5551_PRE")]
        const RGBA_5551_PRE = ffi::COGL_PIXEL_FORMAT_RGBA_5551_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_1010102_PRE")]
        const RGBA_1010102_PRE = ffi::COGL_PIXEL_FORMAT_RGBA_1010102_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_1010102_PRE")]
        const BGRA_1010102_PRE = ffi::COGL_PIXEL_FORMAT_BGRA_1010102_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_2101010_PRE")]
        const ARGB_2101010_PRE = ffi::COGL_PIXEL_FORMAT_ARGB_2101010_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_2101010_PRE")]
        const ABGR_2101010_PRE = ffi::COGL_PIXEL_FORMAT_ABGR_2101010_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_RGBA_FP_16161616_PRE")]
        const RGBA_FP_16161616_PRE = ffi::COGL_PIXEL_FORMAT_RGBA_FP_16161616_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_BGRA_FP_16161616_PRE")]
        const BGRA_FP_16161616_PRE = ffi::COGL_PIXEL_FORMAT_BGRA_FP_16161616_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ARGB_FP_16161616_PRE")]
        const ARGB_FP_16161616_PRE = ffi::COGL_PIXEL_FORMAT_ARGB_FP_16161616_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_ABGR_FP_16161616_PRE")]
        const ABGR_FP_16161616_PRE = ffi::COGL_PIXEL_FORMAT_ABGR_FP_16161616_PRE as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_DEPTH_16")]
        const DEPTH_16 = ffi::COGL_PIXEL_FORMAT_DEPTH_16 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_DEPTH_32")]
        const DEPTH_32 = ffi::COGL_PIXEL_FORMAT_DEPTH_32 as u32;
        #[doc(alias = "COGL_PIXEL_FORMAT_DEPTH_24_STENCIL_8")]
        const DEPTH_24_STENCIL_8 = ffi::COGL_PIXEL_FORMAT_DEPTH_24_STENCIL_8 as u32;
    }
}

#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
impl fmt::Display for PixelFormat {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        <Self as fmt::Debug>::fmt(self, f)
    }
}

#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
#[doc(hidden)]
impl IntoGlib for PixelFormat {
    type GlibType = ffi::CoglPixelFormat;

    fn into_glib(self) -> ffi::CoglPixelFormat {
        self.bits()
    }
}

#[cfg(any(feature = "v0_8", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v0_8")))]
#[doc(hidden)]
impl FromGlib<ffi::CoglPixelFormat> for PixelFormat {
    unsafe fn from_glib(value: ffi::CoglPixelFormat) -> Self {
        Self::from_bits_truncate(value)
    }
}

